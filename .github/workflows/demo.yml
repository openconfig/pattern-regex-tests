name: Demo on openconfig/public

on:
  pull_request:
    branches: [ main ]

jobs:

  pattern:
    name: pattern statement
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
          python-version: '3.x'

    - name: Set up pyang
      run: pip3 install pyang

    - name: Get public repo
      run: git clone https://github.com/openconfig/public.git ~/tmp/public

    - name: Demo output on openconfig/public
      continue-on-error: true
      run: |
          OCDIR=~/tmp/public pytests/pattern_test.sh

  posix-pattern:
    name: posix-pattern statement
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      # Use default go version so that we don't have to update it every time a new one comes out.
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Build
      run: go build -v ./...

    - name: Get public repo
      run: git clone https://github.com/openconfig/public.git ~/tmp/public

    - name: Demo output on openconfig/public
      continue-on-error: true
      id: demo
      run: |
          go run gotests/main.go -model-root ~/tmp/public testdata/regexp-test.yang &> output
          status=$?
          title="### Test Results on openconfig/public"
          echo ::set-output name=title::$title
          if [ "$status" -eq "0" ]; then
            message="all tests passed"
            echo ::set-output name=message::$message
          else
            message="${output}"
            echo ::set-output name=message::$message
          fi

    - name: Find Comment
      uses: peter-evans/find-comment@v1
      id: fc-posix
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: 'OpenConfigBot'
        body-includes: ${{ steps.demo.outputs.title }}

    - name: Create or update comment
      uses: peter-evans/create-or-update-comment@v1
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          ${{ steps.demo.outputs.title }}
          ${{ steps.demo.outputs.message }}
        edit-mode: replace
